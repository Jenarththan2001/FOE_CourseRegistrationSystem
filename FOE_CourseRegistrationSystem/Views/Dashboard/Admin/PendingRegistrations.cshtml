@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="~/css/AdminDashboard_style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <style>
        /* ✅ Table Styling */
        .content-section {
            padding: 20px;
            margin: 20px;
            background-color: #f8f9fa;
            border-radius: 10px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 12px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #007bff;
            color: white;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        /* ✅ Buttons */
        .btn-approve {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }

        .btn-reject {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }

        .btn-approve:hover {
            background-color: #218838;
        }

        .btn-reject:hover {
            background-color: #c82333;
        }

        /* ✅ Dropdown Styling */
        .filter-section {
            margin: 20px 0;
        }

        .filter-section label {
            font-weight: bold;
            margin-right: 10px;
        }

        .filter-section select {
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }
        /* ✅ Buttons Styling */
.btn-action {
    display: inline-block;
    padding: 8px 12px;
    font-size: 14px;
    font-weight: bold;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin: 2px;
    transition: all 0.3s ease-in-out;
}

/* ✅ Approve Button */
.btn-approve {
    background-color: #28a745;
    color: white;
}

.btn-approve:hover {
    background-color: #218838;
    transform: scale(1.05);
}

/* ✅ Reject Button */
.btn-reject {
    background-color: #dc3545;
    color: white;
}

.btn-reject:hover {
    background-color: #c82333;
    transform: scale(1.05);
}

/* ✅ Centering Action Buttons */
.action-buttons {
    display: flex;
    justify-content: center;
    gap: 8px;
}

    </style>

</head>

<body>
    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="logo">
                <span>FOE UOJ</span>
            </div>
            <ul class="nav-links">
                <div class="top-links">
                    <li>
                        <a href="@Url.Action("AdminDashboard", "Admin")"><i class="fas fa-home"></i><span>Dashboard</span></a>
                    </li>
                    <li class="active">
                        <a href="@Url.Action("RegistrationDetails", "Admin")"><i class="fas fa-users"></i><span>Registration Details</span></a>
                    </li>
                    <li>
                        <a href="@Url.Action("CourseOffering", "Admin")"><i class="fas fa-book"></i><span>Course Offering</span></a>
                    </li>
                    <li>
                        <a href="@Url.Action("AdvisorDetails", "Admin")"><i class="fas fa-chart-line"></i><span>Advisor List</span></a>
                    </li>
                </div>
                <div class="bottom-links">
                    <li class="bottom-items">
                        <a href="#"><i class="fas fa-cog"></i><span>Settings</span></a>
                    </li>
                    <li class="bottom-items">
                        <a href="#"><i class="fas fa-question-circle"></i><span>Help</span></a>
                    </li>
                    <li class="bottom-items">
                        <a href="~/Account/Login"><i class="fas fa-sign-out-alt"></i><span>Log out</span></a>
                    </li>
                </div>
            </ul>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <div class="header">
                <h1>Admin Dashboard</h1>
                <div class="user-info">
                    <div class="profile-pic">
                        <img id="admin-profile" src="~/images/profile.png" alt="Admin Profile">
                    </div>
                    <span id="admin-name">| Admin: John Doe</span>
                    <span id="date-time">| Date: <span id="current-date"></span> | Time: <span id="current-time"></span></span>
                </div>
            </div>

            <div class="content-section">
                <h2>Pending Registration Page</h2>
            </div>

<!-- Dropdown for Filtering Status -->
<div class="filter-section">
    <label for="statusFilter"><strong>Filter by Status:</strong></label>
    <select id="statusFilter" onchange="filterRegistrations()">
        <option value="All">All</option>
        <option value="Pending" selected>Pending</option> <!-- ✅ Default Selected -->
        <option value="Approved">Approved</option>
        <option value="Rejected">Rejected</option>
    </select>

    <label for="courseFilter"><strong>Filter by Course Code:</strong></label>
    <select id="courseFilter" onchange="filterRegistrations()">
        <option value="All">All</option> <!-- ✅ Default -->
    </select>

    <label for="semesterFilter"><strong>Filter by Semester:</strong></label>
    <select id="semesterFilter" onchange="filterRegistrations()">
        <option value="All">All</option> <!-- ✅ Default -->
    </select>
</div>


<div class="content-section">
    <h2>Pending Registrations</h2>
    <table id="pendingRegistrationsTable">
        <thead>
            <tr>
                <th>Student ID</th>
                <th>Student Name</th>
                <th>Course Code</th>
                <th>Course Name</th>
                <th>Semester</th>
                <th>Closing Date</th>
                <th>Status</th>
                <th>Registration Date</th>
                <th>Attempt</th> <!-- ✅ Added Attempt Column -->
                <th>Advisor Approval</th> <!-- ✅ Added Advisor Approval Status -->
                <th>Action</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>


        <script>
            let allRegistrations = [];


function fetchPendingRegistrations() {
    console.log("🔹 Fetching Pending Registrations...");

    $.ajax({
        url: '@Url.Action("GetPendingRegistrations", "Admin")',
        type: 'GET',
        dataType: 'json',
        success: function (registrations) {
            console.log("✅ API Called: GetPendingRegistrations()");
            console.log("✅ API Response:", registrations);

            allRegistrations = registrations; // ✅ Store globally for filtering

            // ✅ Populate Course and Semester Filters
            populateCourseFilter(registrations);
            populateSemesterFilter(registrations);

            // ✅ Ensure "Pending" is selected & apply filter immediately
            $("#statusFilter").val("Pending");
            filterRegistrations();
        },
        error: function (xhr, status, error) {
            console.log("❌ API Fetch Failed:", error);
            console.log("🔴 Response Text:", xhr.responseText);
            console.log("🔴 Status Code:", xhr.status);
        }
    });
}



        function populateCourseFilter(registrations) {
        let courseFilter = $("#courseFilter");
        courseFilter.empty();
        courseFilter.append(`<option value="All">All</option>`); // ✅ Default option

        // ✅ Get Unique Course Codes
        let uniqueCourses = [...new Set(registrations.map(reg => reg.courseCode))];
        uniqueCourses.forEach(course => {
            courseFilter.append(`<option value="${course}">${course}</option>`);
        });

        console.log("✅ Course Filter Populated:", uniqueCourses);
    }

        function populateSemesterFilter(registrations) {
        let semesterFilter = $("#semesterFilter");
        semesterFilter.empty();
        semesterFilter.append(`<option value="All">All</option>`); // ✅ Default option

        // ✅ Get Unique Semesters
        let uniqueSemesters = [...new Set(registrations.map(reg => reg.semester))].sort();
        uniqueSemesters.forEach(semester => {
            semesterFilter.append(`<option value="${semester}">Semester ${semester}</option>`);
        });

        console.log("✅ Semester Filter Populated:", uniqueSemesters);
    }

function populateTable(registrations) {
    let tableBody = $("#pendingRegistrationsTable tbody");
    tableBody.empty();

    if (!registrations || registrations.length === 0) {
        console.log("❌ No pending registrations found.");
        tableBody.append("<tr><td colspan='11' style='text-align:center;'>No pending registrations.</td></tr>");
        return;
    }

    registrations.forEach(reg => {
        let advisorApproval = reg.isApprovedByAdvisor === "Yes" ? "✅ Approved" : "❌ Not Approved";

        let row = `
            <tr>
                <td>${reg.studentID}</td>
                <td>${reg.studentName}</td>
                <td>${reg.courseCode}</td>
                <td>${reg.courseName}</td>
                <td>Semester ${reg.semester}</td>
                <td>${new Date(reg.closingDate).toLocaleDateString()}</td>
                <td>${reg.status}</td>
                <td>${new Date(reg.registrationDate).toLocaleDateString()}</td>
                <td>${reg.attempt}</td> <!-- ✅ Display Attempt Count -->
                <td>${advisorApproval}</td> <!-- ✅ Display Advisor Approval Status -->
                <td class="action-buttons">
                    <button class="btn-action btn-approve" onclick="updateStatus(${reg.pendingID}, 'Approved')">
                        <i class="fas fa-check-circle"></i> Approve
                    </button>
                    <button class="btn-action btn-reject" onclick="updateStatus(${reg.pendingID}, 'Rejected')">
                        <i class="fas fa-times-circle"></i> Reject
                    </button>
                </td>
            </tr>
        `;
        tableBody.append(row);
    });

    console.log("✅ Table populated with filtered registrations.");
}
            

    function filterRegistrations() {
        let selectedStatus = $("#statusFilter").val();
        let selectedCourse = $("#courseFilter").val();
        let selectedSemester = $("#semesterFilter").val();
        console.log(`🔹 Filtering by Status: ${selectedStatus}, Course: ${selectedCourse}, Semester: ${selectedSemester}`);

        let filtered = allRegistrations;

        if (selectedStatus !== "All") {
            filtered = filtered.filter(reg => reg.status === selectedStatus);
        }
        if (selectedCourse !== "All") {
            filtered = filtered.filter(reg => reg.courseCode === selectedCourse);
        }
        if (selectedSemester !== "All") {
            filtered = filtered.filter(reg => reg.semester === selectedSemester);
        }

        populateTable(filtered);
    }

            function updateStatus(pendingID, newStatus) {
                console.log(`🔹 Updating status of PendingID: ${pendingID} to ${newStatus}`);

                $.ajax({
                    url: '@Url.Action("UpdatePendingStatus", "Admin")',
                    type: 'POST',
                    contentType: "application/json",
                    data: JSON.stringify({ PendingID: pendingID, Status: newStatus }),
                    success: function (response) {
                        alert(response.message);
                        fetchPendingRegistrations();
                    },
                    error: function (xhr, status, error) {
                        console.log("❌ Failed to update status:", error);
                        alert("Failed to update status.");
                    }
                });
            }


$(document).ready(function () {
    console.log("🔹 Page loaded. Calling fetchPendingRegistrations()...");
    fetchPendingRegistrations(); // ✅ API is called when the page loads

    function updateTime() {
        const currentDate = new Date();
        document.getElementById("current-date").textContent = currentDate.toLocaleDateString();
        document.getElementById("current-time").textContent = currentDate.toLocaleTimeString();
    }
    setInterval(updateTime, 1000);
    updateTime();

        // ✅ Automatically filter "Pending" on load
    $("#statusFilter").val("Pending"); 
    filterRegistrations();
});

        </script>
    </div>
</body>
</html>
